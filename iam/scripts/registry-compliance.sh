#!/bin/bash

# Registry compliance verification script
# Verifies that documentation structure matches Terraform Registry requirements

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

echo "🏛️ Terraform Registry Compliance Verification..."

cd "$PROJECT_ROOT"

# Check Registry-required structure
echo "📋 Verifying Registry structure requirements..."

# 1. Mandatory provider overview
if [ ! -f "docs/index.md" ]; then
    echo "❌ Missing required docs/index.md"
    exit 1
fi
echo "✅ Provider overview (docs/index.md) present"

# 2. Resource documentation with correct naming
RESOURCES=("iam_custom_role" "iam_group" "iam_resource" "iam_role_binding")
for resource in "${RESOURCES[@]}"; do
    if [ ! -f "docs/resources/${resource}.md" ]; then
        echo "❌ Missing docs/resources/${resource}.md"
        exit 1
    fi
    
    # Check that it doesn't have provider prefix
    if [ -f "docs/resources/hiiretail_${resource}.md" ]; then
        echo "❌ Found incorrect file docs/resources/hiiretail_${resource}.md (should not have provider prefix)"
        exit 1
    fi
done
echo "✅ All resource docs use correct naming (no provider prefix)"

# 3. Check for required sections in provider index
if ! grep -q "## Example Usage" docs/index.md; then
    echo "❌ docs/index.md missing required 'Example Usage' section"
    exit 1
fi

if ! grep -q "## Schema\|## Argument Reference" docs/index.md; then
    echo "❌ docs/index.md missing required 'Argument Reference' or 'Schema' section"
    exit 1
fi
echo "✅ Provider index has required sections"

# 4. Check examples directory structure
if [ ! -d "examples" ]; then
    echo "❌ Missing examples/ directory"
    exit 1
fi

if [ ! -f "examples/provider/main.tf" ]; then
    echo "❌ Missing examples/provider/main.tf"
    exit 1
fi

for resource in "${RESOURCES[@]}"; do
    if [ ! -f "examples/resources/${resource}/main.tf" ]; then
        echo "❌ Missing examples/resources/${resource}/main.tf"
        exit 1
    fi
done
echo "✅ Examples directory structure complete"

# 5. Check YAML frontmatter format
echo "📋 Checking YAML frontmatter..."

# Check resource docs have proper frontmatter structure
for resource in "${RESOURCES[@]}"; do
    if ! head -5 "docs/resources/${resource}.md" | grep -q "^---"; then
        echo "❌ docs/resources/${resource}.md missing YAML frontmatter"
        exit 1
    fi
done
echo "✅ Resource documentation has proper YAML frontmatter"

# 6. Check document sizes (Registry 500KB limit)
echo "📋 Checking Registry size limits..."
find docs -name "*.md" -exec wc -c {} \; | while read size file; do
    if [ "$size" -gt 512000 ]; then  # 500KB = 512000 bytes
        echo "❌ $file exceeds Registry 500KB limit ($size bytes)"
        exit 1
    fi
done
echo "✅ All documents within Registry size limits"

# 7. Verify terraform-plugin-docs generated content
if ! grep -q "generated by https://github.com/hashicorp/terraform-plugin-docs" docs/index.md; then
    echo "❌ Provider index not generated by terraform-plugin-docs"
    exit 1
fi
echo "✅ Documentation generated by terraform-plugin-docs"

# 8. Check Schema sections exist
for resource in "${RESOURCES[@]}"; do
    if ! grep -q "## Schema" "docs/resources/${resource}.md"; then
        echo "❌ docs/resources/${resource}.md missing Schema section"
        exit 1
    fi
done
echo "✅ All resource docs have Schema sections"

echo ""
echo "🎉 Registry Compliance Verification PASSED!"
echo ""
echo "Registry Requirements Summary:"
echo "✅ Provider overview with required sections"
echo "✅ Resource docs with Registry-compliant naming"
echo "✅ Proper YAML frontmatter structure"
echo "✅ Complete examples directory"
echo "✅ Generated by terraform-plugin-docs"
echo "✅ All documents within size limits"
echo "✅ Schema sections present"
echo ""
echo "🚀 Ready for Terraform Registry publication!"
echo ""
echo "Next steps:"
echo "1. Ensure provider is built and tagged with semantic version"
echo "2. Push to GitHub with proper release tags"
echo "3. Registry will automatically detect and publish"