{"openapi":"3.0.0","paths":{"/api/v1/support-cases":{"get":{"operationId":"findCases","x-permissions":["iam.support-case.get"],"summary":"Get support cases by status, tenant id or user profile id","description":"Get support cases","parameters":[{"name":"status","required":false,"in":"query","description":"The status of the support case","schema":{"$ref":"#/components/schemas/SupportCaseStatus"}},{"name":"tenantId","required":false,"in":"query","description":"The tenant id","schema":{"type":"string"}},{"name":"userProfileId","required":false,"in":"query","description":"The user profile id, to filter cases created by the user or assignees","schema":{"type":"string"}},{"name":"createdAfter","required":false,"in":"query","description":"Support cases older than this will not be returned","schema":{"format":"date-time","type":"string"}},{"name":"take","required":true,"in":"query","schema":{"minimum":0,"default":100,"type":"number"}},{"name":"skip","required":true,"in":"query","schema":{"minimum":0,"default":0,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SupportCaseDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SupportCase"],"security":[{"access-token":[]}]},"post":{"operationId":"createCase","x-permissions":["iam.support-case.create"],"summary":"Create support case","description":"Create support case","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSupportCaseBody"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SupportCaseDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SupportCase"],"security":[{"access-token":[]}]}},"/api/v1/support-cases/{supportCaseId}":{"get":{"operationId":"getCase","x-permissions":["iam.support-case.get"],"summary":"Get support cases by id","description":"Get support case","parameters":[{"name":"supportCaseId","required":true,"in":"path","description":"The support case id","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SupportCaseDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":""},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SupportCase"],"security":[{"access-token":[]}]}},"/api/v1/support-cases/{supportCaseId}/audit-logs":{"get":{"operationId":"getAuditLogsByCase","x-permissions":["iam.support-case.get"],"summary":"Get audit logs by support case id","description":"Get audit logs by support case id","parameters":[{"name":"supportCaseId","required":true,"in":"path","description":"The support case id","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SupportCaseAuditLogDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":""},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SupportCase"],"security":[{"access-token":[]}]}},"/api/v1/support-cases/{supportCaseId}/accept":{"post":{"operationId":"acceptCase","x-permissions":["iam.support-case.update"],"summary":"Accept support case","description":"Accept support case (tenant should accept the case)","parameters":[{"name":"supportCaseId","required":true,"in":"path","description":"The support case id","schema":{"type":"string"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SupportCase"],"security":[{"access-token":[]}]}},"/api/v1/support-cases/{supportCaseId}/reject":{"post":{"operationId":"rejectCase","x-permissions":["iam.support-case.update"],"summary":"Reject support case","description":"Reject support case (tenant should reject the case)","parameters":[{"name":"supportCaseId","required":true,"in":"path","description":"The support case id","schema":{"type":"string"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SupportCase"],"security":[{"access-token":[]}]}},"/api/v1/support-cases/{supportCaseId}/close":{"post":{"operationId":"closeCase","x-permissions":["iam.support-case.update"],"summary":"Cancel support case","description":"Cancel support case (can be done be either tenant or support)","parameters":[{"name":"supportCaseId","required":true,"in":"path","description":"The support case id","schema":{"type":"string"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SupportCase"],"security":[{"access-token":[]}]}},"/api/v1/support-cases/{supportCaseId}/credentials":{"get":{"operationId":"createCredentials","x-permissions":["iam.support-case.get"],"summary":"Create credentials for assignee to access the case","description":"Create credentials for assignee to access the case","parameters":[{"name":"supportCaseId","required":true,"in":"path","description":"The support case id","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SupportCaseCredentialsDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"410":{"description":""},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SupportCase"],"security":[{"access-token":[]}]}},"/api/v1/tenants":{"post":{"operationId":"createTenant","x-permissions":["iam.tenant.create"],"summary":"Create tenant","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTenantDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TenantDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Tenants"],"security":[{"access-token":[]}]},"get":{"operationId":"getTenants","x-permissions":["iam.tenant.list"],"summary":"List tenants","parameters":[{"name":"alias","required":false,"in":"query","description":"Tenant alias. Used as CNAME for tenant, for example tenant with alias extenda is accessable at https://extenda.hiiretail.com","schema":{"pattern":"^(?!hii)[a-z][a-z0-9-]{1,19}$","type":"string"}},{"name":"skip","required":true,"in":"query","description":"Skip certain number of records","schema":{"default":0,"example":0,"type":"number"}},{"name":"take","required":true,"in":"query","description":"Take certain number of records","schema":{"maximum":1000,"default":1000,"example":10,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TenantDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}},"default":{"headers":{"X-Pagination-Total":{"description":"Total amount of items in collection, example - 100","schema":{"type":"string"}},"X-Pagination-Skip":{"description":"Current pagination offset, example - 10","schema":{"type":"string"}},"X-Pagination-Take":{"description":"Max amount of items to take per request, example - 50","schema":{"type":"string"}},"X-Pagination-Has-More":{"description":"If true, next call will return non empty array, example - true","schema":{"type":"string"}}},"description":""}},"tags":["Tenants"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/test-tenant":{"post":{"operationId":"createTestTenant","x-permissions":["iam.tenant.create"],"summary":"Create test tenant","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTestTenantDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TenantDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Tenants"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{id}":{"get":{"operationId":"getTenant","x-permissions":["iam.tenant.get"],"summary":"Get tenant by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TenantDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Tenants"],"security":[{"access-token":[]}]},"put":{"operationId":"updateTenant","x-permissions":["iam.tenant.update"],"summary":"Update tenant by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateTenantDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"412":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InvalidPreconditionDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Tenants"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/users/{userId}/groups":{"post":{"operationId":"createUserGroupLink","x-permissions":["iam.user.assign-group"],"summary":"Adds user to a group","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"userId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateGroupLinkDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GroupLinkDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Users"],"security":[{"access-token":[]}]},"get":{"operationId":"getUserGroupLinks","x-permissions":["iam.user.list-groups"],"summary":"Lists all user group links","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"userId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GroupLinkDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Users"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/users/{userId}/groups/{id}":{"get":{"operationId":"getUserGroupLink","x-permissions":["iam.user.get"],"summary":"Gets user group link by id","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"userId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GroupLinkDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Users"],"security":[{"access-token":[]}]},"delete":{"operationId":"deleteUserGroupLink","x-permissions":["iam.user.unassign-group"],"summary":"Removes user from a group","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"userId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Users"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/groups":{"post":{"operationId":"createGroup","x-permissions":["iam.group.create"],"summary":"Create group.","description":"Create group.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateGroupDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GroupDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Groups"],"security":[{"access-token":[]}]},"get":{"operationId":"listGroups","x-permissions":["iam.group.list"],"summary":"List groups.","description":"List groups.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"searchString","required":false,"in":"query","description":"searchString only works, when sortBy is selected and searches in `sortBy` field","schema":{"type":"string"}},{"name":"direction","required":false,"in":"query","schema":{"$ref":"#/components/schemas/OrderByDirection"}},{"name":"limit","required":false,"in":"query","schema":{"minimum":0,"default":1000,"type":"number"}},{"name":"offset","required":false,"in":"query","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"sortBy","required":false,"in":"query","schema":{"$ref":"#/components/schemas/SortBy"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GroupDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Groups"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/groups/{id}":{"get":{"operationId":"getGroup","x-permissions":["iam.group.get"],"summary":"Get group by id.","description":"Get group by id.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GroupDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Groups"],"security":[{"access-token":[]}]},"delete":{"operationId":"deleteGroup","x-permissions":["iam.group.delete"],"summary":"Delete group by id.","description":"Delete group by id.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Groups"],"security":[{"access-token":[]}]},"put":{"operationId":"updateGroup","x-permissions":["iam.group.update"],"summary":"Update group by id.","description":"Update group by id.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateGroupDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Groups"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/groups/{id}/roles/{roleId}":{"delete":{"operationId":"unassignRole","x-permissions":["iam.group.unassign-role"],"summary":"Unassign role from group by id.","description":"Unassign role from group by id.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"roleId","required":true,"in":"path","schema":{"type":"string"}},{"name":"isCustom","required":false,"in":"query","schema":{"default":false,"type":"boolean"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Groups"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/groups/{id}/users":{"get":{"operationId":"getUsersInGroup","x-permissions":["iam.group.list-users"],"summary":"Get all users in group.","description":"Get all users in group.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Groups"],"security":[{"access-token":[]}]}},"/api/v2/tenants/{tenantId}/groups/{id}/roles":{"post":{"operationId":"assignRole","x-permissions":["iam.group.assign-role"],"summary":"Assign role to group.","description":"Assign role to group.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRoleBindingDto"}}}},"responses":{"200":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["GroupsV2"],"security":[{"access-token":[]}]},"get":{"operationId":"getGroupRoles","x-permissions":["iam.group.list-roles"],"summary":"Get group roles.","description":"Get group roles.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RoleBindingDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["GroupsV2"],"security":[{"access-token":[]}]}},"/api/v2/tenants/{tenantId}/groups/{id}/roles/{roleId}":{"put":{"operationId":"updateGroupRole","x-permissions":["iam.group.assign-role"],"summary":"Update role bindings in group.","description":"Update role bindings in group.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"roleId","required":true,"in":"path","schema":{"type":"string"}},{"name":"isCustom","required":false,"in":"query","schema":{"default":false,"type":"boolean"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateRoleBindingDto"}}}},"responses":{"200":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["GroupsV2"],"security":[{"access-token":[]}]}},"/api/v1/roles":{"post":{"operationId":"createRole","x-permissions":["iam.role.create"],"summary":"Create role","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRoleDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoleDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Roles"],"security":[{"access-token":[]}]},"get":{"operationId":"getRoles","x-permissions":["iam.role.list"],"summary":"List roles","parameters":[{"name":"searchString","required":false,"in":"query","description":"searchString only works, when sortBy is selected and searches in `sortBy` field","schema":{"type":"string"}},{"name":"direction","required":false,"in":"query","schema":{"$ref":"#/components/schemas/OrderByDirection"}},{"name":"limit","required":false,"in":"query","schema":{"minimum":0,"default":1000,"type":"number"}},{"name":"offset","required":false,"in":"query","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"sortBy","required":false,"in":"query","schema":{"$ref":"#/components/schemas/RoleFields"}},{"name":"returnAliases","required":false,"in":"query","description":"If set to true, permissions array will contain permission aliases instead of permission ids (or id if no alias is found)","schema":{"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/RoleDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Roles"],"security":[{"access-token":[]}]}},"/api/v1/roles/{id}":{"get":{"operationId":"getRole","x-permissions":["iam.role.get"],"summary":"Get role by id","parameters":[{"name":"id","required":true,"in":"path","description":"Role id must follow the pattern: {systemPrefix}.{role} and contain a-z letters and hyphens where the systemPrefix size is 3 and role is between 2 and 30 characters.","schema":{"pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,29}$","example":"iam.role","type":"string"}},{"name":"returnAliases","required":false,"in":"query","description":"If set to true, permissions array will contain permission aliases instead of permission ids (or id if no alias is found)","schema":{"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoleDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Roles"],"security":[{"access-token":[]}]},"put":{"operationId":"updateRole","x-permissions":["iam.role.update"],"summary":"Update role by id","parameters":[{"name":"id","required":true,"in":"path","description":"Role id must follow the pattern: {systemPrefix}.{role} and contain a-z letters and hyphens where the systemPrefix size is 3 and role is between 2 and 30 characters.","schema":{"pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,29}$","example":"iam.role","type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateRoleDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Roles"],"security":[{"access-token":[]}]}},"/api/v1/permissions":{"post":{"operationId":"createPermission","x-permissions":["iam.permission.create"],"summary":"Create permission","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePermissionDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermissionDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Permissions"],"security":[{"access-token":[]}]},"get":{"operationId":"getPermissions","x-permissions":["iam.permission.list"],"summary":"List permissions","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PermissionDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Permissions"],"security":[{"access-token":[]}]}},"/api/v1/permissions/{id}":{"get":{"operationId":"getPermission","x-permissions":["iam.permission.get"],"summary":"Get permission by id","parameters":[{"name":"id","required":true,"in":"path","description":"Permission id must follow the pattern: {systemPrefix}.{resource}.{action} and contain a-z letters and hyphens where the systemPrefix size is 3, the resource and action parts are between 2 and 16 characters.","schema":{"pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,15}\\.[a-z][-a-z]{1,15}$","example":"iam.resource.action","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PermissionDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Permissions"],"security":[{"access-token":[]}]},"put":{"operationId":"updatePermission","x-permissions":["iam.permission.update"],"summary":"Update permission by id","parameters":[{"name":"id","required":true,"in":"path","description":"Permission id must follow the pattern: {systemPrefix}.{resource}.{action} and contain a-z letters and hyphens where the systemPrefix size is 3, the resource and action parts are between 2 and 16 characters.","schema":{"pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,15}\\.[a-z][-a-z]{1,15}$","example":"iam.resource.action","type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdatePermissionDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Permissions"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/roles":{"post":{"operationId":"createCustomRole","x-permissions":["iam.custom-role.create"],"summary":"Create custom role.","description":"Create custom role.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCustomRoleDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomRoleDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["CustomRoles"],"security":[{"access-token":[]}]},"get":{"operationId":"getCustomRoles","x-permissions":["iam.custom-role.list"],"summary":"List custom roles","description":"List custom roles'.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"limit","required":false,"in":"query","schema":{"minimum":0,"default":1000,"type":"number"}},{"name":"offset","required":false,"in":"query","schema":{"minimum":0,"default":0,"type":"number"}}],"responses":{"201":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CustomRoleDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["CustomRoles"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/roles/{id}":{"get":{"operationId":"getCustomRole","x-permissions":["iam.custom-role.get"],"summary":"Get custom role by id","description":"Get custom role by id'.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"example":"custom.role","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomRoleDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["CustomRoles"],"security":[{"access-token":[]}]},"delete":{"operationId":"deleteCustomRole","x-permissions":["iam.custom-role.delete"],"summary":"Delete custom role by id","description":"Delete custom role by id","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"example":"custom.role","type":"string"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["CustomRoles"],"security":[{"access-token":[]}]},"put":{"operationId":"updateCustomRole","x-permissions":["iam.custom-role.update"],"summary":"Update custom role by id","description":"Update custom role by id","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"example":"custom.role","type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateCustomRoleDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["CustomRoles"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/users":{"post":{"operationId":"createUser","x-permissions":["iam.user.create"],"summary":"Create a user","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Users"],"security":[{"access-token":[]}]},"get":{"operationId":"listUsers","x-permissions":["iam.user.list"],"summary":"List users","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"googleUserId","required":false,"in":"query","schema":{"type":"string"}},{"name":"externalId","required":false,"in":"query","schema":{"type":"string"}},{"name":"includePii","required":false,"in":"query","description":"If enabled, response will include email & name. Сan be set only if googleUserId or externalId filter defined","schema":{"default":false,"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Users"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/users/{id}":{"get":{"operationId":"getUser","x-permissions":["iam.user.get"],"summary":"Get user by id","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Users"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/users:find":{"get":{"operationId":"findUser","x-permissions":["iam.user.find"],"summary":"Find user","description":"Finds a single user by search query.\nIf more than one user was found 409 is returned.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"name","required":false,"in":"query","description":"User name to search for","schema":{"type":"string"}},{"name":"userProfileId","required":false,"in":"query","description":"Id of user profile to search for","schema":{"type":"string"}},{"name":"email","required":false,"in":"query","description":"User email to search for","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Users"],"security":[{"access-token":[]}]}},"/api/v2/tenants/{tenantId}/users/{id}":{"put":{"operationId":"updateUser","x-permissions":["iam.user.update"],"summary":"Update user","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserDto"}}}},"responses":{"200":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["UsersV2"],"security":[{"access-token":[]}]},"delete":{"operationId":"deleteUser","x-permissions":["iam.user.delete"],"summary":"Delete user by id","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["UsersV2"],"security":[{"access-token":[]}]}},"/api/v2/tenants/{tenantId}/users/{id}/password":{"put":{"operationId":"resetUserPassword","x-permissions":["iam.user.password-reset"],"summary":"Reset user password","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResetPasswordDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["UsersV2"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/providers-oidc":{"post":{"operationId":"createOidcProvider","x-permissions":["iam.provider.create"],"summary":"Create OIDC Identity provider","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOidcIdentityProviderDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OidcIdentityProviderDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["OidcIdentityProviders"],"security":[{"access-token":[]}]},"get":{"operationId":"getProviders","x-permissions":["iam.provider.list"],"summary":"List OIDC Identity Providers","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OidcIdentityProviderDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["OidcIdentityProviders"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/providers-oidc/{id}":{"get":{"operationId":"getOidcProvider","x-permissions":["iam.provider.get"],"summary":"Get OIDC Identity Provider by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OidcIdentityProviderDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["OidcIdentityProviders"],"security":[{"access-token":[]}]},"put":{"operationId":"updateOidcProvider","x-permissions":["iam.provider.update"],"summary":"Update OIDC Identity Provider by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateOidcIdentityProviderDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["OidcIdentityProviders"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/providers-oidc/{id}/disable":{"put":{"operationId":"disableOidcProvider","x-permissions":["iam.provider.update"],"summary":"Disable OIDC Identity Provider by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["OidcIdentityProviders"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/providers-oidc/{id}/enable":{"put":{"operationId":"enableOidcProvider","x-permissions":["iam.provider.update"],"summary":"Enable OIDC Identity Provider by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["OidcIdentityProviders"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/providers-saml":{"post":{"operationId":"createSamlProvider","x-permissions":["iam.provider.create"],"summary":"Create SAML Identity provider","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSamlIdentityProviderDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSamlIdentityProviderDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SamlIdentityProviders"],"security":[{"access-token":[]}]},"get":{"operationId":"getSamlProviders","x-permissions":["iam.provider.list"],"summary":"List SAML Identity Providers","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SamlIdentityProviderDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SamlIdentityProviders"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/providers-saml/{id}":{"get":{"operationId":"getSamlProvider","x-permissions":["iam.provider.get"],"summary":"Get SAML Identity Provider by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SamlIdentityProviderDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SamlIdentityProviders"],"security":[{"access-token":[]}]},"put":{"operationId":"updateSamlProvider","x-permissions":["iam.provider.update"],"summary":"Update SAML Identity Provider by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateSamlIdentityProviderDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SamlIdentityProviders"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/providers-saml/{id}/disable":{"put":{"operationId":"disableSamlProvider","x-permissions":["iam.provider.update"],"summary":"Disable SAML Identity Provider by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SamlIdentityProviders"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/providers-saml/{id}/enable":{"put":{"operationId":"enableSamlProvider","x-permissions":["iam.provider.update"],"summary":"Enable SAML Identity Provider by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["SamlIdentityProviders"],"security":[{"access-token":[]}]}},"/api/v1/login-config":{"get":{"operationId":"getConfig","summary":"Get login config","description":"Returns tenant id in firestore and GIP + available identity providers","parameters":[{"name":"tenantAlias","required":true,"in":"query","description":"Tenant alias","schema":{"minLength":2,"maxLength":20,"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginConfigDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["LoginConfig"]}},"/api/v1/login-config:setPrimaryConnectionId":{"post":{"operationId":"setPrimaryConnectionId","x-permissions":["iam.tenant.update"],"summary":"Try set primary connection id. If provided id does not match any of the providers or is not provided at all, no changes are made.","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetPrimaryConnectionIdDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["LoginConfig"],"security":[{"access-token":[]}]}},"/api/v1/login-config:setDefaultLocale":{"post":{"operationId":"setDefaultLanguage","x-permissions":["iam.tenant.update"],"summary":"Endpoint lets the tenant set default locale. If `defaultLocale` is not passed, default locale will be deleted","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetDefaultLocaleDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["LoginConfig"],"security":[{"access-token":[]}]}},"/api/v1/login-config:setAnonymousShoppersLoginDisabled":{"post":{"operationId":"setAnonymousShoppersLoginDisabled","x-permissions":["iam.tenant.update"],"summary":"Disables/Enables anonymous shopper login. If flag in the body not specified, value will be removed from config & login will be enabled.","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetAnonymousShoppersLoginDisabledDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["LoginConfig"],"security":[{"access-token":[]}]}},"/api/v1/login-config:setDefaultTimezone":{"post":{"operationId":"setDefaultTimezone","x-permissions":["iam.tenant.update"],"summary":"Endpoint lets the tenant set default timezone. If `defaultTimezone` is not passed, default timezone will be deleted","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetDefaultTimezoneDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["LoginConfig"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/user-profile":{"get":{"operationId":"getUserProfile","x-permissions":[],"summary":"Get own profile","description":"\nUser profile requires valid IAM token (all other tokens will be rejected),\nwith the same tenantId, that in path and\ndoes not require any specific permissions.\nBehavior of an endpoint depends on token.\n","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["UserProfile"],"security":[{"access-token":[]}]},"put":{"operationId":"updateUserProfile","x-permissions":[],"summary":"Update own profile","description":"\nUser profile requires valid IAM token (all other tokens will be rejected),\nwith the same tenantId, that in path and\ndoes not require any specific permissions.\nBehavior of an endpoint depends on token.\n","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserProfileDto"}}}},"responses":{"200":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["UserProfile"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/user-profile/password":{"put":{"operationId":"resetOwnPassword","x-permissions":[],"summary":"Reset own password","description":"\nUser profile requires valid IAM token (all other tokens will be rejected),\nwith the same tenantId, that in path and\ndoes not require any specific permissions.\nBehavior of an endpoint depends on token.\n","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResetPasswordDto"}}}},"responses":{"200":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["UserProfile"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/user-profile/permissions":{"get":{"operationId":"getOwnPermissions","x-permissions":[],"summary":"Get all permissions for a passed User token","description":"\nUser profile requires valid IAM token (all other tokens will be rejected),\nwith the same tenantId, that in path and\ndoes not require any specific permissions.\nBehavior of an endpoint depends on token.\n","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"fullPermission","required":false,"in":"query","schema":{"default":false,"type":"boolean"}},{"name":"resourceId","required":false,"in":"query","schema":{"pattern":"^(?!\\.\\.?$)(?!.*__.*__)([^/]{1,1500})$","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PermissionDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["UserProfile"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/user-profile/logout":{"get":{"operationId":"logout","x-permissions":[],"summary":"Redirects to IDP logout endpoit if one was configured. Endpoint is publicly available, it only interacts with current user session","description":"\n      Redirects to IDP logout endpoit if one was configured.\n      If no logout url is configured, 'fallbackRedirectUrl' query param is used.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"fallbackRedirectUrl","required":true,"in":"query","description":"\n      Fallback url for redirect if federated identity provider logout url is not found.\n    ","schema":{"type":"string"}},{"name":"idProviderConnectionId","required":true,"in":"query","description":"Provider Connection ID in IAM API","schema":{"pattern":"^(((oidc|saml)\\.[a-z]{5})|password)$","example":"oidc.yfkgu","type":"string"}},{"name":"externalUserId","required":false,"in":"query","description":"User id from extrnal identity provider","schema":{"type":"string"}}],"responses":{"200":{"description":""},"302":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["UserProfile"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/resources/{id}":{"put":{"operationId":"setResource","x-permissions":["iam.resource.set"],"summary":"Set resource","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"pattern":"^(?!\\.\\.?$)(?!.*__.*__)([^/]{1,1500})$","type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SetResourceDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceDto"}}}},"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Resources"],"security":[{"access-token":[]}]},"get":{"operationId":"getResource","x-permissions":["iam.resource.get"],"summary":"Get resource by id","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"pattern":"^(?!\\.\\.?$)(?!.*__.*__)([^/]{1,1500})$","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResourceDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Resources"],"security":[{"access-token":[]}]},"delete":{"operationId":"deleteResource","x-permissions":["iam.resource.delete"],"summary":"Delete resource by id","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"pattern":"^(?!\\.\\.?$)(?!.*__.*__)([^/]{1,1500})$","type":"string"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Resources"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/resources":{"get":{"operationId":"getResources","x-permissions":["iam.resource.list"],"summary":"List resources. If `permission` parameter is specified, endpoint will require - valid token that will have `permission` from query (bindings don't matter).","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}},{"name":"permission","required":false,"in":"query","description":"Optional permission to filter resources based on user token","schema":{"pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,15}\\.[a-z][-a-z]{1,15}$","example":"iam.resource.action","type":"string"}},{"name":"type","required":false,"in":"query","description":"Resource type, a prefix in resource id, like - bu, for Business units.","schema":{"example":"bu","type":"string"}}],"responses":{"200":{"headers":{"X-Pagination-Total":{"description":"Total amount of items in collection, example - 100","schema":{"type":"string"}},"X-Pagination-Skip":{"description":"Current pagination offset, example - 10","schema":{"type":"string"}},"X-Pagination-Take":{"description":"Max amount of items to take per request, example - 50","schema":{"type":"string"}},"X-Pagination-Has-More":{"description":"If true, next call will return non empty array, example - true","schema":{"type":"string"}}},"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ResourceDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["Resources"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/external-apps":{"post":{"operationId":"createExternalApp","x-permissions":["iam.external-app.create"],"summary":"Create an external application.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateExternalAppDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExternalAppDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["ExternalApp"],"security":[{"access-token":[]}]},"get":{"operationId":"getExternalApps","x-permissions":["iam.external-app.list"],"summary":"Get a list of external applications.","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ExternalAppDto"}}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["ExternalApp"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/external-apps/{id}":{"get":{"operationId":"getExternalAppById","x-permissions":["iam.external-app.get"],"summary":"Get external application by id.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExternalAppDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["ExternalApp"],"security":[{"access-token":[]}]},"put":{"operationId":"updateExternalApp","x-permissions":["iam.external-app.update"],"summary":"Update external application.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateExternalAppDto"}}}},"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"409":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConflictDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["ExternalApp"],"security":[{"access-token":[]}]},"delete":{"operationId":"deleteExternalApp","x-permissions":["iam.external-app.delete"],"summary":"Delete external application.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":""},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"404":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundDto"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["ExternalApp"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/iam-token/users/federated":{"post":{"operationId":"generateTestFederatedToken","x-permissions":[],"summary":"Exchange federated ID token user token for IAM ID token","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FederatedUserTokenRequestDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestIamTokenDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["IamToken"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/iam-token/users/standalone":{"post":{"operationId":"generateTestStandaloneToken","x-permissions":[],"summary":"Exchange email+password for IAM ID token. WARNING: Use of standalone users is not recommended. Be aware, you cannot generate IAM token for the same ID token twice!!","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StandaloneUserTokenRequestDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestIamTokenDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"401":{"description":""},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["IamToken"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/iam-token/refresh":{"post":{"operationId":"refreshIamToken","x-permissions":[],"summary":"Exchange refresh token user token for IAM ID token","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IamRefreshTokenRequestDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefreshTokenDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["IamToken"],"security":[{"access-token":[]}]}},"/api/v1/tenants/{tenantId}/iam-token/custom":{"post":{"operationId":"generateCustomToken","x-permissions":[],"summary":"Exchange IAM ID token for custom firebase token. Custom can be used to trigger new auth session with firebase sdk given iam token","parameters":[{"name":"tenantId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestIamTokenDto"}}}},"400":{"description":"Invalid params","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestDto"}}}},"403":{"description":"Unauthorized"},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorDto"}}}}},"tags":["IamToken"],"security":[{"access-token":[]}]}}},"info":{"title":"IAM API","description":"IAM API docs <br><br> <a href=\"/schemas/v1/openapi.json\">OpenAPI Document (json)</a>","version":"1.0","contact":{},"license":{"name":"UNLICENSED","url":"UNLICENSED"}},"tags":[],"servers":[{"url":"https://iam-api.retailsvc-test.com"},{"url":"https://iam-api.retailsvc.com"}],"components":{"securitySchemes":{"access-token":{"scheme":"bearer","bearerFormat":"JWT","type":"http","description":"JWT Authorization header using the Bearer scheme."},"api-key":{"scheme":"bearer","bearerFormat":"JWT","type":"http","description":"API_KEY Authorization header using the Bearer scheme."}},"schemas":{"BadRequestDto":{"type":"object","properties":{"statusCode":{"type":"number","enum":[400]},"message":{"type":"array","items":{"type":"string"}},"error":{"type":"string","enum":["Bad Request"]}},"required":["statusCode","message","error"]},"InternalServerErrorDto":{"type":"object","properties":{"statusCode":{"type":"number","enum":[500]},"message":{"type":"string","enum":["Internal Server Error"]}},"required":["statusCode","message"]},"SupportCaseStatus":{"type":"string","description":"The status of the case. The status can only change from Pending to Accepted or Rejected. It is not possible to change the status from Accepted to Rejected or vice versa.","enum":["Pending","Accepted","Rejected","Expired","Archived","Closed"]},"AccessLevel":{"type":"string","description":"The access level of the case","default":"read-only","enum":["read-only"]},"RequesterType":{"type":"string","description":"The type of the requester","enum":["user","oauth2-client","internal"]},"RequesterDto":{"type":"object","properties":{"id":{"type":"string","description":"The user id"},"type":{"$ref":"#/components/schemas/RequesterType"}},"required":["id","type"]},"SupportCaseDto":{"type":"object","properties":{"id":{"type":"number","description":"The case id"},"tenantId":{"type":"string","description":"The tenant id"},"status":{"$ref":"#/components/schemas/SupportCaseStatus"},"title":{"type":"string","description":"The title of the case"},"description":{"type":"string","description":"The description of the case"},"accessLevel":{"$ref":"#/components/schemas/AccessLevel"},"jiraIssueLinks":{"description":"JIRA issues","example":["HII-1234"],"type":"array","items":{"type":"string"}},"createdBy":{"description":"Taken from the auth context - the user who created the case","allOf":[{"$ref":"#/components/schemas/RequesterDto"}]},"createdAt":{"type":"string","description":"The creation date of the case","example":"2021-01-01T00:00:00.000Z"},"decidedAt":{"type":"string","description":"The date of the case last action","example":"2021-01-01T00:00:00.000Z"},"decidedBy":{"description":"Taken from the auth context - the user who make a decision on the support case (tanant admin)","allOf":[{"$ref":"#/components/schemas/RequesterDto"}]},"assignees":{"description":"The list of user profile ids","type":"array","items":{"type":"string"}}},"required":["id","tenantId","status","title","accessLevel","createdBy","createdAt","assignees"]},"SupportCaseAuditLogDto":{"type":"object","properties":{"id":{"type":"string","description":"The id of the case audit log"},"action":{"type":"string","description":"The action of the case audit log","example":"create"},"supportCaseId":{"type":"string","description":"The support case id"},"payload":{"type":"object","description":"The payload of the case audit log","example":{"body":{"message":"The case has been created"},"headers":{"Content-Type":"application/json"}}},"requester":{"description":"The requester id performing the action","allOf":[{"$ref":"#/components/schemas/RequesterDto"}]},"createdAt":{"type":"string","description":"The creation date of the case audit log. ISO 8601 format","example":"2021-01-01T00:00:00.000Z"}},"required":["id","action","supportCaseId","payload","requester","createdAt"]},"CreateSupportCaseBody":{"type":"object","properties":{"tenantId":{"type":"string","description":"The tenant id"},"title":{"type":"string","description":"The title of the case"},"description":{"type":"string","description":"The description of the case"},"accessLevel":{"$ref":"#/components/schemas/AccessLevel"},"jiraIssueLinks":{"description":"JIRA issues","example":["HII-1234"],"type":"array","items":{"type":"string"}},"assignees":{"description":"The list of user profile ids","type":"array","items":{"type":"string"}}},"required":["tenantId","title","accessLevel","assignees"]},"SupportCaseCredentialsDto":{"type":"object","properties":{"id":{"type":"number","description":"The case id"},"username":{"type":"string","description":"The username of the user"},"password":{"type":"string","description":"The password of the user"},"loginUrl":{"type":"string","description":"The login url"},"supportCaseId":{"type":"string","description":"The support case id"},"fetchedAt":{"type":"string","description":"The time it was first fetched. ISO 8601 format","example":"2021-01-01T00:00:00.000Z"}},"required":["id","username","password","loginUrl","supportCaseId"]},"CreateTenantDto":{"type":"object","properties":{"name":{"type":"string","maxLength":200,"description":"Full tenant name"},"alias":{"type":"string","pattern":"^(?!hii)[a-z][a-z0-9-]{1,19}$","description":"Tenant alias. Used as CNAME for tenant, for example tenant with alias extenda is accessable at https://extenda.hiiretail.com"},"adminUser":{"type":"string","maxLength":256,"format":"email","description":"Admin user email"}},"required":["name","alias","adminUser"]},"EntityStatus":{"type":"string","enum":["Creating","Created","Updating"]},"TenantDto":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","maxLength":200,"description":"Full tenant name"},"alias":{"type":"string","pattern":"^(?!hii)[a-z][a-z0-9-]{1,19}$","description":"Tenant alias. Used as CNAME for tenant, for example tenant with alias extenda is accessable at https://extenda.hiiretail.com"},"adminUser":{"type":"string","maxLength":256,"format":"email","description":"Admin user email"},"status":{"$ref":"#/components/schemas/EntityStatus"},"shopperTenantId":{"type":"string","description":"Tenant Id in Google Identity Platform Shoppers project"},"staffTenantId":{"type":"string","description":"Tenant Id in Google Identity Platform Staff project"},"isTestTenant":{"type":"boolean","description":"If true, this is test tenant, used as test env for prod tenant"}},"required":["id","name","alias","adminUser","status","shopperTenantId","staffTenantId","isTestTenant"]},"ConflictDto":{"type":"object","properties":{"statusCode":{"type":"number","enum":[409]},"message":{"type":"string"},"error":{"type":"string","enum":["Conflict"]}},"required":["statusCode","message","error"]},"CreateTestTenantDto":{"type":"object","properties":{"name":{"type":"string","maxLength":200,"description":"Full tenant name"},"adminUser":{"type":"string","maxLength":256,"format":"email","description":"Admin user email"}}},"NotFoundDto":{"type":"object","properties":{"statusCode":{"type":"number","enum":[404]},"message":{"type":"string"},"error":{"type":"string","enum":["Not Found"]}},"required":["statusCode","message","error"]},"UpdateTenantDto":{"type":"object","properties":{"name":{"type":"string","maxLength":200,"description":"Full tenant name"},"alias":{"type":"string","pattern":"^(?!hii)[a-z][a-z0-9-]{1,19}$","description":"Tenant alias. Used as CNAME for tenant, for example tenant with alias extenda is accessable at https://extenda.hiiretail.com"},"adminUser":{"type":"string","maxLength":256,"format":"email","description":"Admin user email"}}},"InvalidPreconditionDto":{"type":"object","properties":{"statusCode":{"type":"number","enum":[409]},"message":{"type":"string","enum":["Invalid precondition"]},"error":{"type":"string","enum":["Conflict"]}},"required":["statusCode","message","error"]},"CreateGroupLinkDto":{"type":"object","properties":{"documentId":{"type":"string"},"userGroupDocumentId":{"type":"string"}},"required":["userGroupDocumentId"]},"GroupLinkDto":{"type":"object","properties":{"documentId":{"type":"string"},"userGroupDocumentId":{"type":"string"}},"required":["documentId","userGroupDocumentId"]},"CreateGroupDto":{"type":"object","properties":{"name":{"type":"string","maxLength":255},"description":{"type":"string","maxLength":255},"id":{"type":"string","description":"An optional id of a group. Will be auto-generated if not passed"}},"required":["name"]},"GroupDto":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","maxLength":255},"description":{"type":"string","maxLength":255},"status":{"$ref":"#/components/schemas/EntityStatus"}},"required":["id","name","status"]},"OrderByDirection":{"type":"string","enum":["asc","desc"]},"SortBy":{"type":"string","enum":["name"]},"UpdateGroupDto":{"type":"object","properties":{"name":{"type":"string","maxLength":255},"description":{"type":"string","maxLength":255}}},"IdpUserType":{"type":"string","enum":["Staff","Shoppers"]},"UserStatus":{"type":"string","enum":["Creating","Created","Linking","Updating","Deactivating","Inactive","Activating"]},"UserType":{"type":"string","enum":["Federated","Standalone"]},"UserDto":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"email":{"type":"string","format":"email","description":"Required for standalone users and federated users where externalIdField = Email"},"externalId":{"type":"string","nullable":true},"externalProviderId":{"type":"string","nullable":true},"userProfileExternalUserId":{"type":"string","nullable":true},"googleIdentity":{"type":"string"},"scope":{"$ref":"#/components/schemas/IdpUserType"},"standaloneId":{"type":"string","nullable":true},"status":{"$ref":"#/components/schemas/UserStatus"},"type":{"$ref":"#/components/schemas/UserType"},"userProfileId":{"type":"string","description":"Id of this user's profile in User Profile service"}},"required":["id","name","externalId","externalProviderId","googleIdentity","scope","standaloneId","status","type","userProfileId"]},"CreateRoleBindingDto":{"type":"object","properties":{"isCustom":{"type":"boolean","default":false},"roleId":{"type":"string"},"bindings":{"maxItems":10,"type":"array","items":{"type":"string"}}},"required":["roleId","bindings"]},"RoleBindingDto":{"type":"object","properties":{"isCustom":{"type":"boolean","default":false},"roleId":{"type":"string"},"fixedBindings":{"type":"array","items":{"type":"string"}},"bindings":{"maxItems":10,"type":"array","items":{"type":"string"}}},"required":["roleId","bindings"]},"UpdateRoleBindingDto":{"type":"object","properties":{"bindings":{"maxItems":10,"type":"array","items":{"type":"string"}}},"required":["bindings"]},"CreateRoleDto":{"type":"object","properties":{"id":{"type":"string","pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,29}$","description":"Role id must follow the pattern: {systemPrefix}.{role} and contain a-z letters and hyphens where the systemPrefix size is 3 and role is between 2 and 30 characters.","example":"iam.role"},"name":{"type":"string","minLength":3,"maxLength":256},"permissions":{"type":"array","items":{"type":"string","pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,15}\\.[a-z][-a-z]{1,15}$"}},"fixedBindings":{"type":"array","items":{"type":"string"}}},"required":["id","permissions"]},"RoleDto":{"type":"object","properties":{"id":{"type":"string","pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,29}$","description":"Role id must follow the pattern: {systemPrefix}.{role} and contain a-z letters and hyphens where the systemPrefix size is 3 and role is between 2 and 30 characters.","example":"iam.role"},"name":{"type":"string","minLength":3,"maxLength":256},"permissions":{"type":"array","items":{"type":"string","pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,15}\\.[a-z][-a-z]{1,15}$"}},"fixedBindings":{"type":"array","items":{"type":"string"}}},"required":["id","permissions"]},"RoleFields":{"type":"string","enum":["name"]},"UpdateRoleDto":{"type":"object","properties":{"name":{"type":"string","minLength":3,"maxLength":256},"permissions":{"type":"array","items":{"type":"string","pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,15}\\.[a-z][-a-z]{1,15}$"}},"fixedBindings":{"type":"array","items":{"type":"string"}}}},"CreatePermissionDto":{"type":"object","properties":{"id":{"type":"string","pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,15}\\.[a-z][-a-z]{1,15}$","description":"Permission id must follow the pattern: {systemPrefix}.{resource}.{action} and contain a-z letters and hyphens where the systemPrefix size is 3, the resource and action parts are between 2 and 16 characters.","example":"iam.resource.action"},"description":{"type":"string"},"alias":{"type":"string","maxLength":256,"description":"optional alias for the permission, up to 256 characters"}},"required":["id"]},"PermissionDto":{"type":"object","properties":{"id":{"type":"string","pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,15}\\.[a-z][-a-z]{1,15}$","description":"Permission id must follow the pattern: {systemPrefix}.{resource}.{action} and contain a-z letters and hyphens where the systemPrefix size is 3, the resource and action parts are between 2 and 16 characters.","example":"iam.resource.action"},"description":{"type":"string"},"alias":{"type":"string","maxLength":256,"description":"optional alias for the permission, up to 256 characters"}},"required":["id"]},"UpdatePermissionDto":{"type":"object","properties":{"description":{"type":"string"},"alias":{"type":"string","maxLength":256,"description":"optional alias for the permission, up to 256 characters"}}},"CustomRolePermissionDtoWithoutAliasDto":{"type":"object","properties":{"id":{"type":"string","pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,15}\\.[a-z][-a-z]{1,15}$","description":"Permission id must follow the pattern: {systemPrefix}.{resource}.{action} and contain a-z letters and hyphens where the systemPrefix size is 3, the resource and action parts are between 2 and 16 characters.","example":"iam.resource.action"},"attributes":{"type":"object","description":"attributes must be an object with up to 10 props keys up to 40 chars values as strings up to 256 chars","example":{"exampleKey":"exampleValue"}}},"required":["id"]},"CreateCustomRoleDto":{"type":"object","properties":{"id":{"type":"string","example":"custom.role"},"name":{"type":"string","minLength":3,"maxLength":256},"permissions":{"description":"Only 100 permissions per role is allowed. The only exception is pos permissions, we allow up to 500 of them ","type":"array","items":{"$ref":"#/components/schemas/CustomRolePermissionDtoWithoutAliasDto"}}},"required":["id","permissions"]},"CustomRolePermissionDto":{"type":"object","properties":{"id":{"type":"string","pattern":"^[a-z][-a-z]{2}\\.[a-z][-a-z]{1,15}\\.[a-z][-a-z]{1,15}$","description":"Permission id must follow the pattern: {systemPrefix}.{resource}.{action} and contain a-z letters and hyphens where the systemPrefix size is 3, the resource and action parts are between 2 and 16 characters.","example":"iam.resource.action"},"attributes":{"type":"object","description":"attributes must be an object with up to 10 props keys up to 40 chars values as strings up to 256 chars","example":{"exampleKey":"exampleValue"}},"alias":{"type":"string"}},"required":["id"]},"CustomRoleDto":{"type":"object","properties":{"id":{"type":"string","example":"custom.role"},"name":{"type":"string","minLength":3,"maxLength":256},"permissions":{"description":"Only 100 permissions per role is allowed. The only exception is pos permissions, we allow up to 500 of them ","type":"array","items":{"$ref":"#/components/schemas/CustomRolePermissionDto"}}},"required":["id","permissions"]},"UpdateCustomRoleDto":{"type":"object","properties":{"name":{"type":"string","minLength":3,"maxLength":256},"permissions":{"description":"Only 100 permissions per role is allowed. The only exception is pos permissions, we allow up to 500 of them ","type":"array","items":{"$ref":"#/components/schemas/CustomRolePermissionDtoWithoutAliasDto"}}}},"CreateUserDto":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email"},"password":{"type":"string","nullable":true},"type":{"type":"string","enum":["Standalone"]},"scope":{"type":"string","enum":["Staff"]}},"required":["email","type","scope"]},"UpdateUserStatus":{"type":"string","enum":["Active","Inactive"]},"UpdateUserDto":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string","format":"email","description":"Required for standalone users and federated users where externalIdField = Email"},"status":{"$ref":"#/components/schemas/UpdateUserStatus"}}},"ResetPasswordDto":{"type":"object","properties":{"newPassword":{"type":"string"}},"required":["newPassword"]},"ExternalIdField":{"type":"string","enum":["Uid","Email","PhoneNumber"]},"IdentityProviderType":{"type":"string","description":"ID Provider type","enum":["Oidc","Saml"]},"ExternalIdpLogoutConfig":{"type":"object","properties":{"enabled":{"type":"boolean","description":"If enabled, UI will redirect to externalIdpLogout.redirectUrl on logout","default":false},"redirectUrl":{"type":"string","maxLength":512,"description":"Must be a valid url"}},"required":["enabled","redirectUrl"]},"CreateOidcIdentityProviderDto":{"type":"object","properties":{"externalIdField":{"$ref":"#/components/schemas/ExternalIdField"},"name":{"type":"string","minLength":3,"maxLength":256},"type":{"$ref":"#/components/schemas/IdentityProviderType"},"userType":{"$ref":"#/components/schemas/IdpUserType"},"externalIdpLogoutConfig":{"description":"External IdP logout configuration. Used by the UI to specify how to logout from the external IdP.","allOf":[{"$ref":"#/components/schemas/ExternalIdpLogoutConfig"}]},"clientId":{"type":"string","maxLength":512},"issuer":{"type":"string","description":"Must be a valid url"},"prompt":{"type":"string","description":"Space delimited, case sensitive list of ASCII string values that specifies\nwhether the Authorization Server prompts the End-User for reauthentication and consent.\nThe defined values are: none | login | consent | select_account\nFor more info see: https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest","default":"select_account"}},"required":["externalIdField","name","type","userType","clientId","issuer"]},"IdentityProviderStatus":{"type":"string","enum":["Creating","Created","Updating","Inactivating","Inactive"]},"OidcIdentityProviderDto":{"type":"object","properties":{"id":{"type":"string"},"externalIdField":{"$ref":"#/components/schemas/ExternalIdField"},"connectionId":{"type":"string"},"name":{"type":"string","minLength":3,"maxLength":256},"status":{"$ref":"#/components/schemas/IdentityProviderStatus"},"type":{"$ref":"#/components/schemas/IdentityProviderType"},"userType":{"$ref":"#/components/schemas/IdpUserType"},"prompt":{"type":"string","description":"Space delimited, case sensitive list of ASCII string values that specifies\nwhether the Authorization Server prompts the End-User for reauthentication and consent.\nThe defined values are: none | login | consent | select_account\nFor more info see: https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest","default":"select_account"},"externalIdpLogoutConfig":{"description":"External IdP logout configuration. Used by the UI to specify how to logout from the external IdP.","allOf":[{"$ref":"#/components/schemas/ExternalIdpLogoutConfig"}]},"clientId":{"type":"string","maxLength":512},"issuer":{"type":"string","description":"Must be a valid url"},"callbackUrl":{"type":"string"}},"required":["id","externalIdField","connectionId","name","status","type","userType","prompt","clientId","issuer","callbackUrl"]},"UpdateOidcIdentityProviderDto":{"type":"object","properties":{"externalIdField":{"$ref":"#/components/schemas/ExternalIdField"},"name":{"type":"string","minLength":3,"maxLength":256},"externalIdpLogoutConfig":{"description":"External IdP logout configuration. Used by the UI to specify how to logout from the external IdP.","allOf":[{"$ref":"#/components/schemas/ExternalIdpLogoutConfig"}]},"clientId":{"type":"string","maxLength":512},"issuer":{"type":"string","description":"Must be a valid url"},"prompt":{"type":"string","description":"Space delimited, case sensitive list of ASCII string values that specifies\nwhether the Authorization Server prompts the End-User for reauthentication and consent.\nThe defined values are: none | login | consent | select_account\nFor more info see: https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest","default":"select_account"}},"required":["externalIdField","name","clientId","issuer"]},"CreateSamlIdentityProviderDto":{"type":"object","properties":{"externalIdField":{"$ref":"#/components/schemas/ExternalIdField"},"name":{"type":"string","minLength":3,"maxLength":256},"type":{"$ref":"#/components/schemas/IdentityProviderType"},"userType":{"$ref":"#/components/schemas/IdpUserType"},"externalIdpLogoutConfig":{"description":"External IdP logout configuration. Used by the UI to specify how to logout from the external IdP.","allOf":[{"$ref":"#/components/schemas/ExternalIdpLogoutConfig"}]},"entityId":{"type":"string","maxLength":512},"ssoUrl":{"type":"string","description":"Must be a valid url"},"certificates":{"type":"array","items":{"type":"string"}},"rpEntityId":{"type":"string"},"prompt":{"type":"string","description":"Space delimited, case sensitive list of ASCII string values that specifies\nwhether the Authorization Server prompts the End-User for reauthentication and consent.\nThe defined values are: none | login | consent | select_account\nFor more info see: https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest","default":"select_account"}},"required":["externalIdField","name","type","userType","entityId","ssoUrl","certificates","rpEntityId"]},"SamlIdentityProviderDto":{"type":"object","properties":{"id":{"type":"string"},"externalIdField":{"$ref":"#/components/schemas/ExternalIdField"},"connectionId":{"type":"string"},"name":{"type":"string","minLength":3,"maxLength":256},"status":{"$ref":"#/components/schemas/IdentityProviderStatus"},"type":{"$ref":"#/components/schemas/IdentityProviderType"},"userType":{"$ref":"#/components/schemas/IdpUserType"},"prompt":{"type":"string","description":"Space delimited, case sensitive list of ASCII string values that specifies\nwhether the Authorization Server prompts the End-User for reauthentication and consent.\nThe defined values are: none | login | consent | select_account\nFor more info see: https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest","default":"select_account"},"externalIdpLogoutConfig":{"description":"External IdP logout configuration. Used by the UI to specify how to logout from the external IdP.","allOf":[{"$ref":"#/components/schemas/ExternalIdpLogoutConfig"}]},"entityId":{"type":"string","maxLength":512},"ssoUrl":{"type":"string","description":"Must be a valid url"},"certificates":{"type":"array","items":{"type":"string"}},"rpEntityId":{"type":"string"},"callbackUrl":{"type":"string"}},"required":["id","externalIdField","connectionId","name","status","type","userType","prompt","entityId","ssoUrl","certificates","rpEntityId","callbackUrl"]},"UpdateSamlIdentityProviderDto":{"type":"object","properties":{"externalIdField":{"$ref":"#/components/schemas/ExternalIdField"},"name":{"type":"string","minLength":3,"maxLength":256},"externalIdpLogoutConfig":{"description":"External IdP logout configuration. Used by the UI to specify how to logout from the external IdP.","allOf":[{"$ref":"#/components/schemas/ExternalIdpLogoutConfig"}]},"entityId":{"type":"string","maxLength":512},"ssoUrl":{"type":"string","description":"Must be a valid url"},"certificates":{"type":"array","items":{"type":"string"}},"rpEntityId":{"type":"string"},"prompt":{"type":"string","description":"Space delimited, case sensitive list of ASCII string values that specifies\nwhether the Authorization Server prompts the End-User for reauthentication and consent.\nThe defined values are: none | login | consent | select_account\nFor more info see: https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest","default":"select_account"}},"required":["externalIdField","name","entityId","ssoUrl","certificates","rpEntityId"]},"GenericProviderConfigDto":{"type":"object","properties":{"connectionId":{"type":"string","description":"Provider id. example - oidc.my-external-oidc-provider"},"name":{"type":"string","nullable":true,"description":"The name of the provider"},"userType":{"$ref":"#/components/schemas/IdpUserType"},"type":{"$ref":"#/components/schemas/IdentityProviderType"},"prompt":{"type":"string"}},"required":["connectionId","name","userType","type","prompt"]},"LoginConfigDto":{"type":"object","properties":{"tenantId":{"type":"string","description":"HiiRetail tenant ID"},"tenantName":{"type":"string","description":"Full tenant name"},"staffTenantId":{"type":"string","nullable":true,"description":"Identity Platform tenant for staff"},"shopperTenantId":{"type":"string","nullable":true,"description":"Identity Platform tenant for shoppers"},"primaryConnectionId":{"type":"string","description":"OIDC Provider id. example - oidc.my-external-oidc-provider"},"defaultLocale":{"type":"string","maxLength":10,"description":"Used to indicate the Tenant's default locale for purposes of localizing such\n      items as currency, date time format, or numerical representations.\n      The value must be a valid language-tag as defined in [RFC5646](https://tools.ietf.org/html/rfc5646).","example":"en-US"},"defaultTimezone":{"type":"string","description":"Used to indicate the Tenant's default timezone. The value must be a valid timezone as defined in [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).","example":"Europe/Oslo"},"anonymousShoppersLoginDisabled":{"type":"boolean","description":"Disables/Enables anonymous shoppers login"},"providers":{"description":"Identity Providers, available for tenant","type":"array","items":{"$ref":"#/components/schemas/GenericProviderConfigDto"}}},"required":["tenantId","tenantName","staffTenantId","shopperTenantId","providers"]},"SetPrimaryConnectionIdDto":{"type":"object","properties":{"connectionId":{"type":"string","description":"Provider id. example - oidc.my-external-oidc-provider"}}},"SetDefaultLocaleDto":{"type":"object","properties":{"defaultLocale":{"type":"string","maxLength":10,"description":"Used to indicate the Tenant's default locale for purposes of localizing such\n      items as currency, date time format, or numerical representations.\n      The value must be a valid language-tag as defined in [RFC5646](https://tools.ietf.org/html/rfc5646).","example":"en-US"}}},"SetAnonymousShoppersLoginDisabledDto":{"type":"object","properties":{"anonymousShoppersLoginDisabled":{"type":"boolean","description":"Disables/Enables anonymous shoppers login"}}},"SetDefaultTimezoneDto":{"type":"object","properties":{"defaultTimezone":{"type":"string","description":"Used to indicate the Tenant's default timezone. The value must be a valid timezone as defined in [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).","example":"Europe/Oslo"}}},"UpdateUserProfileDto":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Required for standalone users and federated users where externalIdField = Email"},"displayName":{"type":"string"}}},"SetResourceDto":{"type":"object","properties":{"name":{"type":"string"},"props":{"oneOf":[{"type":"string","nullable":true},{"type":"number","nullable":true},{"type":"integer","nullable":true},{"type":"boolean","nullable":true},{"type":"array","nullable":true},{"type":"object","nullable":true}]}},"required":["name"]},"ResourceDto":{"type":"object","properties":{"id":{"type":"string","pattern":"^(?!\\.\\.?$)(?!.*__.*__)([^/]{1,1500})$"},"name":{"type":"string"},"props":{"oneOf":[{"type":"string","nullable":true},{"type":"number","nullable":true},{"type":"integer","nullable":true},{"type":"boolean","nullable":true},{"type":"array","nullable":true},{"type":"object","nullable":true}]}},"required":["id","name"]},"CreateExternalAppDto":{"type":"object","properties":{"name":{"type":"string","minLength":3,"maxLength":256,"description":"Application name"},"description":{"type":"string","minLength":5,"maxLength":256,"description":"Describes your app's most notable characteristics"},"apiKey":{"type":"string","minLength":40,"maxLength":60,"description":"Key that will give you a possibility to exchange federated token on IAM token"}},"required":["name"]},"ExternalAppDto":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","minLength":3,"maxLength":256,"description":"Application name"},"description":{"type":"string","minLength":5,"maxLength":256,"description":"Describes your app's most notable characteristics"},"apiKey":{"type":"string","minLength":40,"maxLength":60,"description":"Key that will give you a possibility to exchange federated token on IAM token"},"lastUsedAt":{"type":"string","format":"date-time"}},"required":["id","name","apiKey","lastUsedAt"]},"UpdateExternalAppDto":{"type":"object","properties":{"name":{"type":"string","minLength":3,"maxLength":256,"description":"Application name"},"description":{"type":"string","minLength":5,"maxLength":256,"description":"Describes your app's most notable characteristics"},"apiKey":{"type":"string","minLength":40,"maxLength":60,"description":"Key that will give you a possibility to exchange federated token on IAM token"}},"required":["name","apiKey"]},"FederatedUserTokenRequestDto":{"type":"object","properties":{"federatedIdToken":{"type":"string","description":"An ID Token (JWT) from federated identity platform"},"idProviderConnectionId":{"type":"string","pattern":"^(oidc|saml)\\.[a-z]{5}$","description":"Provider Connection ID in IAM API","example":"oidc.yfkgu"},"userScope":{"$ref":"#/components/schemas/IdpUserType"},"nonce":{"type":"string","description":"Nonce to be used in ID Token validation. Nonce must be unique for every token. Notice that you need to pass original nonce, but token should contain sha256 hash of original nonce","example":"c19bd65b-39a5-4283-ab3c-d861401caa2f"}},"required":["federatedIdToken","idProviderConnectionId","userScope"]},"TestIamTokenDto":{"type":"object","properties":{"iamToken":{"type":"string"},"refreshToken":{"type":"string"},"expiresIn":{"type":"number"}},"required":["iamToken","refreshToken","expiresIn"]},"StandaloneUserTokenRequestDto":{"type":"object","properties":{"email":{"type":"string","description":"User email"},"password":{"type":"string","description":"User password"}},"required":["email","password"]},"IamRefreshTokenRequestDto":{"type":"object","properties":{"refreshToken":{"type":"string","description":"An refresh Token (JWT) from federated identity platform"},"userType":{"$ref":"#/components/schemas/IdpUserType"}},"required":["refreshToken","userType"]},"RefreshTokenDto":{"type":"object","properties":{"iamToken":{"type":"string"},"refreshToken":{"type":"string"},"expiresIn":{"type":"number"}},"required":["iamToken","refreshToken","expiresIn"]}}}}